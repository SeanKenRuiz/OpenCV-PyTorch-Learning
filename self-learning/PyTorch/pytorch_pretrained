from torchvision import models
import torch

alexnet = models.alexnet(pretrained=True)
print(alexnet)

from torchvision import transforms
transform = transforms.Compose([            #[1]
 transforms.Resize(256),                    #[2]
 transforms.CenterCrop(224),                #[3]
 transforms.ToTensor(),                     #[4]
 transforms.Normalize(                      #[5]
 mean=[0.485, 0.456, 0.406],                #[6]
 std=[0.229, 0.224, 0.225]                  #[7]
 )])

# Import Pillow and load data
from PIL import Image
img = Image.open("dog.jpg")
print(img)

# Pre-processing
img_t = transform(img)
batch_t = torch.unsqueeze(img_t, 0)

# Model inference
alexnet.eval() # put model into eval mode

out = alexnet(batch_t)
print(out.shape)

with open('imagenet_classes.txt') as f:
    classes = [line.strip() for line in f.readlines()]